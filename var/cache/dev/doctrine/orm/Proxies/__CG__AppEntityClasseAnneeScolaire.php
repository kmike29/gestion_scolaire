<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ClasseAnneeScolaire extends \App\Entity\ClasseAnneeScolaire implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'Classe' => [parent::class, 'Classe', null],
        "\0".parent::class."\0".'anneeScolaire' => [parent::class, 'anneeScolaire', null],
        "\0".parent::class."\0".'eleves' => [parent::class, 'eleves', null],
        "\0".parent::class."\0".'emploisDuTemps' => [parent::class, 'emploisDuTemps', null],
        "\0".parent::class."\0".'fraisInscription' => [parent::class, 'fraisInscription', null],
        "\0".parent::class."\0".'fraisScolarite' => [parent::class, 'fraisScolarite', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'inscriptions' => [parent::class, 'inscriptions', null],
        "\0".parent::class."\0".'professeurPrincipal' => [parent::class, 'professeurPrincipal', null],
        'Classe' => [parent::class, 'Classe', null],
        'anneeScolaire' => [parent::class, 'anneeScolaire', null],
        'eleves' => [parent::class, 'eleves', null],
        'emploisDuTemps' => [parent::class, 'emploisDuTemps', null],
        'fraisInscription' => [parent::class, 'fraisInscription', null],
        'fraisScolarite' => [parent::class, 'fraisScolarite', null],
        'id' => [parent::class, 'id', null],
        'inscriptions' => [parent::class, 'inscriptions', null],
        'professeurPrincipal' => [parent::class, 'professeurPrincipal', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
